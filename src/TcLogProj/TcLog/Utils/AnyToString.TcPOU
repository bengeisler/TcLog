<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="AnyToString" Id="{28d90234-855d-4077-b80b-97db8a8bae81}" SpecialFunc="None">
    <Declaration><![CDATA[/// Converts value of input data to string, where the input type can be any of 
/// the standard data types.
FUNCTION AnyToString : Tc2_System.T_MaxString
VAR_INPUT
  /// Input data
  data : ANY;
END_VAR
VAR
  _anyByte : POINTER TO BYTE;
  _anyUSINT : POINTER TO USINT;
  _anyInt : POINTER TO INT;
  _anyUInt : POINTER TO UINT;
  _anyUDInt : POINTER TO UDINT;
  _anySInt : POINTER TO SINT;
  _anyDInt : POINTER TO DINT;
  _anyLInt : POINTER TO LINT;
  _anyULInt : POINTER TO ULINT;
  _anyWord : POINTER TO WORD;
  _anyLWord : POINTER TO LWORD;
  _anyReal : POINTER TO REAL;
  _anyLReal : POINTER TO LREAL;
  _anyDateAndTime : POINTER TO DATE_AND_TIME;
  _anyDate : POINTER TO DATE;
  _anyTime : POINTER TO TIME;
  _anyWString : POINTER TO WSTRING;
  _anyTOD : POINTER TO TOD;
  _anyString : POINTER TO STRING;
  _string : T_MAXSTRING;
  _wString : WSTRING;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF data.TypeClass = __SYSTEM.TYPE_CLASS.TYPE_BYTE THEN
  _anyByte := data.pValue;
  AnyToString := BYTE_TO_STRING(_anyByte^);
    
ELSIF data.TypeClass = __SYSTEM.TYPE_CLASS.TYPE_INT THEN
  _anyInt := data.pValue;
  AnyToString := INT_TO_STRING(_anyInt^);
    
ELSIF data.TypeClass = __SYSTEM.TYPE_CLASS.TYPE_UINT THEN
  _anyUInt := data.pValue;
  AnyToString := UINT_TO_STRING(_anyUInt^);
    
ELSIF data.TypeClass = __SYSTEM.TYPE_CLASS.TYPE_UDINT THEN
  _anyUDInt := data.pValue;
  AnyToString := UDINT_TO_STRING(_anyUDInt^);
    
ELSIF data.TypeClass = __SYSTEM.TYPE_CLASS.TYPE_SINT THEN
  _anySInt := data.pValue;
  AnyToString := SINT_TO_STRING(_anySInt^);
    
ELSIF data.TypeClass = __SYSTEM.TYPE_CLASS.TYPE_USINT THEN
  _anyUSInt := data.pValue;
  AnyToString := USINT_TO_STRING(_anyUSInt^);
    
ELSIF data.TypeClass = __SYSTEM.TYPE_CLASS.TYPE_DINT THEN
  _anyDInt := data.pValue;
  AnyToString := DINT_TO_STRING(_anyDInt^);
    
ELSIF data.TypeClass = __SYSTEM.TYPE_CLASS.TYPE_LINT THEN
  _anyLInt := data.pValue;
  AnyToString := LINT_TO_STRING(_anyLInt^);
      
ELSIF data.TypeClass = __SYSTEM.TYPE_CLASS.TYPE_ULINT THEN
  _anyULInt := data.pValue;
  AnyToString := ULINT_TO_STRING(_anyULInt^);
  
ELSIF data.TypeClass = __SYSTEM.TYPE_CLASS.TYPE_WORD THEN
  _anyWord := data.pValue;
  AnyToString := WORD_TO_STRING(_anyWord^);
    
ELSIF data.TypeClass = __SYSTEM.TYPE_CLASS.TYPE_LWORD THEN
  _anyLWord := data.pValue;
  AnyToString := LWORD_TO_STRING(_anyLWord^);
  
ELSIF data.TypeClass = __SYSTEM.TYPE_CLASS.TYPE_REAL THEN
  _anyReal := data.pValue;
  AnyToString := REAL_TO_STRING(_anyReal^);
  
ELSIF data.TypeClass = __SYSTEM.TYPE_CLASS.TYPE_LREAL THEN
  _anyLReal := data.pValue;
  AnyToString := LREAL_TO_STRING(_anyLReal^);
  
ELSIF data.TypeClass = __SYSTEM.TYPE_CLASS.TYPE_DATEANDTIME THEN
  _anyDateAndTime := data.pValue;
  AnyToString := DT_TO_STRING(_anyDateAndTime^);  
  
ELSIF data.TypeClass = __SYSTEM.TYPE_CLASS.TYPE_DATE THEN
  _anyDate := data.pValue;
  AnyToString := DATE_TO_STRING(_anyDate^);
  
ELSIF data.TypeClass = __SYSTEM.TYPE_CLASS.TYPE_TIME THEN
  _anyTime := data.pValue;
  AnyToString := TIME_TO_STRING(_anyTime^);
  
ELSIF data.TypeClass = __SYSTEM.TYPE_CLASS.TYPE_STRING THEN
  _anyString := data.pValue;
  AnyToString := _anyString^;
  
ELSIF data.TypeClass = __SYSTEM.TYPE_CLASS.TYPE_WSTRING THEN
  _anyWString := data.pValue;
  _wString := _anyWString^;
  Tc2_Utilities.WSTRING_TO_STRING2(ADR(_string), ADR(_wString), SIZEOF(_wString));
  AnyToString := _string;
  
ELSIF data.TypeClass = __SYSTEM.TYPE_CLASS.TYPE_TIMEOFDAY THEN
  _anyTOD := data.pValue;
  AnyToString := TOD_TO_STRING(_anyTOD^);
  
ELSE
  AnyToString := TO_STRING(data.pValue^);
END_IF]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>